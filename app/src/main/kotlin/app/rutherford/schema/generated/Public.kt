/*
 * This file is generated by jOOQ.
 */
package app.rutherford.schema.generated


import app.rutherford.schema.generated.tables.AuthUser
import app.rutherford.schema.generated.tables.AuthUserToken

import javax.annotation.processing.Generated

import kotlin.collections.List

import org.jooq.Catalog
import org.jooq.Table
import org.jooq.impl.SchemaImpl


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = [
        "https://www.jooq.org",
        "jOOQ version:3.17.6",
        "schema version:public_1"
    ],
    comments = "This class is generated by jOOQ"
)
@Suppress("UNCHECKED_CAST")
open class Public : SchemaImpl("public", DefaultCatalog.DEFAULT_CATALOG) {
    public companion object {

        /**
         * The reference instance of <code>public</code>
         */
        val PUBLIC: Public = Public()
    }

    /**
     * The table <code>public.auth_user</code>.
     */
    val AUTH_USER: AuthUser get() = AuthUser.AUTH_USER

    /**
     * The table <code>public.auth_user_token</code>.
     */
    val AUTH_USER_TOKEN: AuthUserToken get() = AuthUserToken.AUTH_USER_TOKEN

    override fun getCatalog(): Catalog = DefaultCatalog.DEFAULT_CATALOG

    override fun getTables(): List<Table<*>> = listOf(
        AuthUser.AUTH_USER,
        AuthUserToken.AUTH_USER_TOKEN
    )
}
