/*
 * This file is generated by jOOQ.
 */
package app.rutherford.database.schema.tables.pojos;


import java.io.Serializable;
import java.time.Instant;
import java.util.UUID;

import javax.annotation.processing.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.17.6",
        "schema version:public_1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserRefreshTokens implements Serializable {

    private static final long serialVersionUID = 1L;

    private UUID id;
    private Instant createdAt;
    private Instant updatedAt;
    private Instant expiration;
    private String state;
    private String tokenHash;
    private UUID userId;

    public UserRefreshTokens() {}

    public UserRefreshTokens(UserRefreshTokens value) {
        this.id = value.id;
        this.createdAt = value.createdAt;
        this.updatedAt = value.updatedAt;
        this.expiration = value.expiration;
        this.state = value.state;
        this.tokenHash = value.tokenHash;
        this.userId = value.userId;
    }

    public UserRefreshTokens(
        UUID id,
        Instant createdAt,
        Instant updatedAt,
        Instant expiration,
        String state,
        String tokenHash,
        UUID userId
    ) {
        this.id = id;
        this.createdAt = createdAt;
        this.updatedAt = updatedAt;
        this.expiration = expiration;
        this.state = state;
        this.tokenHash = tokenHash;
        this.userId = userId;
    }

    /**
     * Getter for <code>public.user_refresh_tokens.id</code>.
     */
    public UUID getId() {
        return this.id;
    }

    /**
     * Setter for <code>public.user_refresh_tokens.id</code>.
     */
    public UserRefreshTokens setId(UUID id) {
        this.id = id;
        return this;
    }

    /**
     * Getter for <code>public.user_refresh_tokens.created_at</code>.
     */
    public Instant getCreatedAt() {
        return this.createdAt;
    }

    /**
     * Setter for <code>public.user_refresh_tokens.created_at</code>.
     */
    public UserRefreshTokens setCreatedAt(Instant createdAt) {
        this.createdAt = createdAt;
        return this;
    }

    /**
     * Getter for <code>public.user_refresh_tokens.updated_at</code>.
     */
    public Instant getUpdatedAt() {
        return this.updatedAt;
    }

    /**
     * Setter for <code>public.user_refresh_tokens.updated_at</code>.
     */
    public UserRefreshTokens setUpdatedAt(Instant updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }

    /**
     * Getter for <code>public.user_refresh_tokens.expiration</code>.
     */
    public Instant getExpiration() {
        return this.expiration;
    }

    /**
     * Setter for <code>public.user_refresh_tokens.expiration</code>.
     */
    public UserRefreshTokens setExpiration(Instant expiration) {
        this.expiration = expiration;
        return this;
    }

    /**
     * Getter for <code>public.user_refresh_tokens.state</code>.
     */
    public String getState() {
        return this.state;
    }

    /**
     * Setter for <code>public.user_refresh_tokens.state</code>.
     */
    public UserRefreshTokens setState(String state) {
        this.state = state;
        return this;
    }

    /**
     * Getter for <code>public.user_refresh_tokens.token_hash</code>.
     */
    public String getTokenHash() {
        return this.tokenHash;
    }

    /**
     * Setter for <code>public.user_refresh_tokens.token_hash</code>.
     */
    public UserRefreshTokens setTokenHash(String tokenHash) {
        this.tokenHash = tokenHash;
        return this;
    }

    /**
     * Getter for <code>public.user_refresh_tokens.user_id</code>.
     */
    public UUID getUserId() {
        return this.userId;
    }

    /**
     * Setter for <code>public.user_refresh_tokens.user_id</code>.
     */
    public UserRefreshTokens setUserId(UUID userId) {
        this.userId = userId;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final UserRefreshTokens other = (UserRefreshTokens) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.createdAt == null) {
            if (other.createdAt != null)
                return false;
        }
        else if (!this.createdAt.equals(other.createdAt))
            return false;
        if (this.updatedAt == null) {
            if (other.updatedAt != null)
                return false;
        }
        else if (!this.updatedAt.equals(other.updatedAt))
            return false;
        if (this.expiration == null) {
            if (other.expiration != null)
                return false;
        }
        else if (!this.expiration.equals(other.expiration))
            return false;
        if (this.state == null) {
            if (other.state != null)
                return false;
        }
        else if (!this.state.equals(other.state))
            return false;
        if (this.tokenHash == null) {
            if (other.tokenHash != null)
                return false;
        }
        else if (!this.tokenHash.equals(other.tokenHash))
            return false;
        if (this.userId == null) {
            if (other.userId != null)
                return false;
        }
        else if (!this.userId.equals(other.userId))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.createdAt == null) ? 0 : this.createdAt.hashCode());
        result = prime * result + ((this.updatedAt == null) ? 0 : this.updatedAt.hashCode());
        result = prime * result + ((this.expiration == null) ? 0 : this.expiration.hashCode());
        result = prime * result + ((this.state == null) ? 0 : this.state.hashCode());
        result = prime * result + ((this.tokenHash == null) ? 0 : this.tokenHash.hashCode());
        result = prime * result + ((this.userId == null) ? 0 : this.userId.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("UserRefreshTokens (");

        sb.append(id);
        sb.append(", ").append(createdAt);
        sb.append(", ").append(updatedAt);
        sb.append(", ").append(expiration);
        sb.append(", ").append(state);
        sb.append(", ").append(tokenHash);
        sb.append(", ").append(userId);

        sb.append(")");
        return sb.toString();
    }
}
