/*
 * This file is generated by jOOQ.
 */
package app.rutherford.database.schema;


import app.rutherford.database.schema.tables.UserRefreshTokens;
import app.rutherford.database.schema.tables.Users;
import app.rutherford.database.schema.tables.records.UserRefreshTokensRecord;
import app.rutherford.database.schema.tables.records.UsersRecord;

import javax.annotation.processing.Generated;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * public.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.17.6",
        "schema version:public_1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<UserRefreshTokensRecord> USER_REFRESH_TOKENS_PKEY = Internal.createUniqueKey(UserRefreshTokens.USER_REFRESH_TOKENS, DSL.name("user_refresh_tokens_pkey"), new TableField[] { UserRefreshTokens.USER_REFRESH_TOKENS.ID }, true);
    public static final UniqueKey<UsersRecord> USERS_PKEY = Internal.createUniqueKey(Users.USERS, DSL.name("users_pkey"), new TableField[] { Users.USERS.ID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<UserRefreshTokensRecord, UsersRecord> USER_REFRESH_TOKENS__USER_REFRESH_TOKENS_USER_ID_FKEY = Internal.createForeignKey(UserRefreshTokens.USER_REFRESH_TOKENS, DSL.name("user_refresh_tokens_user_id_fkey"), new TableField[] { UserRefreshTokens.USER_REFRESH_TOKENS.USER_ID }, Keys.USERS_PKEY, new TableField[] { Users.USERS.ID }, true);
}
