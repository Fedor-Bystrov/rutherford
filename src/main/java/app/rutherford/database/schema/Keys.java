/*
 * This file is generated by jOOQ.
 */
package app.rutherford.database.schema;


import app.rutherford.database.schema.tables.AuthUser;
import app.rutherford.database.schema.tables.AuthUserRefreshToken;
import app.rutherford.database.schema.tables.records.AuthUserRecord;
import app.rutherford.database.schema.tables.records.AuthUserRefreshTokenRecord;

import javax.annotation.processing.Generated;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * public.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.17.6",
        "schema version:public_1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AuthUserRecord> AUTH_USER_PKEY = Internal.createUniqueKey(AuthUser.AUTH_USER, DSL.name("auth_user_pkey"), new TableField[] { AuthUser.AUTH_USER.ID }, true);
    public static final UniqueKey<AuthUserRefreshTokenRecord> AUTH_USER_REFRESH_TOKEN_PKEY = Internal.createUniqueKey(AuthUserRefreshToken.AUTH_USER_REFRESH_TOKEN, DSL.name("auth_user_refresh_token_pkey"), new TableField[] { AuthUserRefreshToken.AUTH_USER_REFRESH_TOKEN.ID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<AuthUserRefreshTokenRecord, AuthUserRecord> AUTH_USER_REFRESH_TOKEN__AUTH_USER_REFRESH_TOKEN_USER_ID_FKEY = Internal.createForeignKey(AuthUserRefreshToken.AUTH_USER_REFRESH_TOKEN, DSL.name("auth_user_refresh_token_user_id_fkey"), new TableField[] { AuthUserRefreshToken.AUTH_USER_REFRESH_TOKEN.USER_ID }, Keys.AUTH_USER_PKEY, new TableField[] { AuthUser.AUTH_USER.ID }, true);
}
