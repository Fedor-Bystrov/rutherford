/*
 * This file is generated by jOOQ.
 */
package app.rutherford.database.schema.tables.daos;


import app.rutherford.database.schema.tables.UserRefreshTokens;
import app.rutherford.database.schema.tables.records.UserRefreshTokensRecord;

import java.time.Instant;
import java.util.List;
import java.util.Optional;
import java.util.UUID;

import javax.annotation.processing.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.17.6",
        "schema version:public_1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserRefreshTokensDao extends DAOImpl<UserRefreshTokensRecord, app.rutherford.database.schema.tables.pojos.UserRefreshTokens, UUID> {

    /**
     * Create a new UserRefreshTokensDao without any configuration
     */
    public UserRefreshTokensDao() {
        super(UserRefreshTokens.USER_REFRESH_TOKENS, app.rutherford.database.schema.tables.pojos.UserRefreshTokens.class);
    }

    /**
     * Create a new UserRefreshTokensDao with an attached configuration
     */
    public UserRefreshTokensDao(Configuration configuration) {
        super(UserRefreshTokens.USER_REFRESH_TOKENS, app.rutherford.database.schema.tables.pojos.UserRefreshTokens.class, configuration);
    }

    @Override
    public UUID getId(app.rutherford.database.schema.tables.pojos.UserRefreshTokens object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<app.rutherford.database.schema.tables.pojos.UserRefreshTokens> fetchRangeOfId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(UserRefreshTokens.USER_REFRESH_TOKENS.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<app.rutherford.database.schema.tables.pojos.UserRefreshTokens> fetchById(UUID... values) {
        return fetch(UserRefreshTokens.USER_REFRESH_TOKENS.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public app.rutherford.database.schema.tables.pojos.UserRefreshTokens fetchOneById(UUID value) {
        return fetchOne(UserRefreshTokens.USER_REFRESH_TOKENS.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<app.rutherford.database.schema.tables.pojos.UserRefreshTokens> fetchOptionalById(UUID value) {
        return fetchOptional(UserRefreshTokens.USER_REFRESH_TOKENS.ID, value);
    }

    /**
     * Fetch records that have <code>created_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<app.rutherford.database.schema.tables.pojos.UserRefreshTokens> fetchRangeOfCreatedAt(Instant lowerInclusive, Instant upperInclusive) {
        return fetchRange(UserRefreshTokens.USER_REFRESH_TOKENS.CREATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_at IN (values)</code>
     */
    public List<app.rutherford.database.schema.tables.pojos.UserRefreshTokens> fetchByCreatedAt(Instant... values) {
        return fetch(UserRefreshTokens.USER_REFRESH_TOKENS.CREATED_AT, values);
    }

    /**
     * Fetch records that have <code>updated_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<app.rutherford.database.schema.tables.pojos.UserRefreshTokens> fetchRangeOfUpdatedAt(Instant lowerInclusive, Instant upperInclusive) {
        return fetchRange(UserRefreshTokens.USER_REFRESH_TOKENS.UPDATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>updated_at IN (values)</code>
     */
    public List<app.rutherford.database.schema.tables.pojos.UserRefreshTokens> fetchByUpdatedAt(Instant... values) {
        return fetch(UserRefreshTokens.USER_REFRESH_TOKENS.UPDATED_AT, values);
    }

    /**
     * Fetch records that have <code>expiration BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<app.rutherford.database.schema.tables.pojos.UserRefreshTokens> fetchRangeOfExpiration(Instant lowerInclusive, Instant upperInclusive) {
        return fetchRange(UserRefreshTokens.USER_REFRESH_TOKENS.EXPIRATION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>expiration IN (values)</code>
     */
    public List<app.rutherford.database.schema.tables.pojos.UserRefreshTokens> fetchByExpiration(Instant... values) {
        return fetch(UserRefreshTokens.USER_REFRESH_TOKENS.EXPIRATION, values);
    }

    /**
     * Fetch records that have <code>state BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<app.rutherford.database.schema.tables.pojos.UserRefreshTokens> fetchRangeOfState(String lowerInclusive, String upperInclusive) {
        return fetchRange(UserRefreshTokens.USER_REFRESH_TOKENS.STATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>state IN (values)</code>
     */
    public List<app.rutherford.database.schema.tables.pojos.UserRefreshTokens> fetchByState(String... values) {
        return fetch(UserRefreshTokens.USER_REFRESH_TOKENS.STATE, values);
    }

    /**
     * Fetch records that have <code>token_hash BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<app.rutherford.database.schema.tables.pojos.UserRefreshTokens> fetchRangeOfTokenHash(String lowerInclusive, String upperInclusive) {
        return fetchRange(UserRefreshTokens.USER_REFRESH_TOKENS.TOKEN_HASH, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>token_hash IN (values)</code>
     */
    public List<app.rutherford.database.schema.tables.pojos.UserRefreshTokens> fetchByTokenHash(String... values) {
        return fetch(UserRefreshTokens.USER_REFRESH_TOKENS.TOKEN_HASH, values);
    }

    /**
     * Fetch records that have <code>user_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<app.rutherford.database.schema.tables.pojos.UserRefreshTokens> fetchRangeOfUserId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(UserRefreshTokens.USER_REFRESH_TOKENS.USER_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>user_id IN (values)</code>
     */
    public List<app.rutherford.database.schema.tables.pojos.UserRefreshTokens> fetchByUserId(UUID... values) {
        return fetch(UserRefreshTokens.USER_REFRESH_TOKENS.USER_ID, values);
    }
}
